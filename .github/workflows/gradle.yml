name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required to create releases

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for git describe to work

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build with Gradle
        run: ./gradlew build

      - name: Build Plugin Distribution
        if: startsWith(github.ref, 'refs/tags/v')
        run: ./gradlew buildPlugin

      - name: Extract Changelog for Release
        if: startsWith(github.ref, 'refs/tags/v')
        id: changelog
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

          # Extract changelog section for this version
          CHANGELOG=$(sed -n "/## \[$VERSION\]/,/## \[/p" CHANGELOG.md | sed '$d' | tail -n +2)

          # If no specific version found, use Unreleased section
          if [ -z "$CHANGELOG" ]; then
            CHANGELOG=$(sed -n "/## \[Unreleased\]/,/## \[/p" CHANGELOG.md | sed '$d' | tail -n +2)
          fi

          # Save to file (GitHub Actions requires this for multiline outputs)
          echo "$CHANGELOG" > release-notes.md

      - name: Find Plugin ZIP
        if: startsWith(github.ref, 'refs/tags/v')
        id: find_zip
        run: |
          ZIP_PATH=$(find build/distributions -name "*.zip" -type f | head -n 1)
          echo "ZIP_PATH=$ZIP_PATH" >> $GITHUB_OUTPUT
          echo "Found plugin ZIP: $ZIP_PATH"

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.changelog.outputs.VERSION }}
          body_path: release-notes.md
          files: ${{ steps.find_zip.outputs.ZIP_PATH }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}