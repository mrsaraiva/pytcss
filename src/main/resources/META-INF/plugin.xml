<!--suppress PluginXmlValidity -->
<idea-plugin>
    <id>org.msaraiva.pytcss</id>
    <name>Textual CSS Support</name>
    <vendor email="marcos@msaraiva.org" url="https://github.com/mrsaraiva/pytcss">Marcos Saraiva</vendor>

    <description><![CDATA[
    <p>Provides syntax highlighting support for Textual CSS (TCSS) files.</p>
    
    <p>Features:</p>
    <ul>
        <li>Syntax highlighting for .tcss files</li>
        <li>Color previews for literal colors and TCSS variables</li>
        <li>Support for TCSS-specific properties and values</li>
        <li>Support for selectors (type, class, ID, pseudo-class)</li>
        <li>Variable support ($variable syntax)</li>
        <li>Nested rule sets with & nesting selector</li>
    </ul>
    
    <p>Learn more about Textual CSS at <a href="https://textual.textualize.io/guide/CSS/">https://textual.textualize.io/guide/CSS/</a></p>
    ]]></description>

    <change-notes><![CDATA[
    <h3>1.2.0</h3>
    <ul>
        <li><strong>Cross-File Variable Resolution</strong> - Variables from any .tcss file now work project-wide</li>
        <li><strong>Enhanced Validation</strong> - Property value type checking, pseudo-class validation, fuzzy suggestions</li>
        <li><strong>Grammar Completeness</strong> - Full support for !important and initial keyword</li>
        <li><strong>Enum Value Completion</strong> - Context-aware completion for 15+ enumerated properties</li>
        <li><strong>Property Catalog Expansion</strong> - 111 total properties (full Textual parity)</li>
        <li><strong>Rich Documentation</strong> - Enhanced hover docs with syntax, CSS/Python examples, see-also links</li>
        <li><strong>Color Preview Icons</strong> - Autocomplete shows colored icons for variables and named colors</li>
        <li><strong>Plugin Settings</strong> - Configure completion behavior (Settings → Languages & Frameworks → Textual CSS)</li>
    </ul>
    <p>See full <a href="https://github.com/mrsaraiva/pytcss/blob/master/CHANGELOG.md">CHANGELOG</a> for details.</p>

    <h3>1.0.0</h3>
    <ul>
        <li>Initial release</li>
        <li>Basic syntax highlighting for .tcss files</li>
        <li>Support for Python inline CSS highlighting</li>
    </ul>
    ]]></change-notes>

    <!-- Product and plugin compatibility -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.python</depends>

    <!-- Application services -->
    <extensions defaultExtensionNs="com.intellij">
        <!-- Plugin settings -->
        <applicationService
            serviceImplementation="org.msaraiva.pytcss.settings.TcssPluginSettings"/>

        <!-- Settings page -->
        <applicationConfigurable
            parentId="language"
            instance="org.msaraiva.pytcss.settings.TcssSettingsConfigurable"
            id="org.msaraiva.pytcss.settings"
            displayName="Textual CSS"/>
        <!-- Register .tcss file type -->
        <fileType 
            name="Textual CSS" 
            implementationClass="org.msaraiva.pytcss.TcssFileType"
            fieldName="INSTANCE" 
            language="TCSS"
            extensions="tcss"/>
        
        <!-- Register language -->
        <lang.parserDefinition 
            language="TCSS" 
            implementationClass="org.msaraiva.pytcss.TcssParserDefinition"/>
        
        <!-- Syntax highlighter -->
        <lang.syntaxHighlighterFactory 
            language="TCSS" 
            implementationClass="org.msaraiva.pytcss.TcssSyntaxHighlighterFactory"/>
        
        <!-- Color settings page -->
        <colorSettingsPage
            implementation="org.msaraiva.pytcss.TcssColorSettingsPage"/>

        <!-- Add icon for .tcss files -->
        <iconProvider implementation="org.msaraiva.pytcss.TcssIconProvider"/>

        <!-- Color preview and picker -->
        <colorProvider implementation="org.msaraiva.pytcss.TcssColorProvider"/>

        <!-- Line marker for 'auto' keyword -->
        <codeInsight.lineMarkerProvider
            language="TCSS"
            implementationClass="org.msaraiva.pytcss.TcssAutoKeywordLineMarker"/>

        <!-- Python CSS/DEFAULT_CSS injection -->
        <multiHostInjector implementation="org.msaraiva.pytcss.python.PythonTcssLanguageInjector"/>

        <!-- Completion contributor -->
        <completion.contributor
            language="TCSS"
            implementationClass="org.msaraiva.pytcss.completion.TcssCompletionContributor"/>

        <!-- Structure view -->
        <lang.psiStructureViewFactory
            language="TCSS"
            implementationClass="org.msaraiva.pytcss.structure.TcssStructureViewFactory"/>

        <!-- Documentation provider -->
        <lang.documentationProvider
            language="TCSS"
            implementationClass="org.msaraiva.pytcss.documentation.TcssDocumentationProvider"/>

        <!-- Live template context -->
        <liveTemplateContext implementation="org.msaraiva.pytcss.templates.TcssTemplateContextType"/>

        <!-- Live templates -->
        <defaultLiveTemplates file="liveTemplates/tcss"/>

        <!-- Validation annotator -->
        <annotator
            language="TCSS"
            implementationClass="org.msaraiva.pytcss.validation.TcssAnnotator"/>

        <!-- Variable rename processor -->
        <renamePsiElementProcessor implementation="org.msaraiva.pytcss.refactoring.TcssVariableRenameProcessor"/>

        <!-- Variable index for cross-file resolution -->
        <fileBasedIndex implementation="org.msaraiva.pytcss.index.TcssVariableIndex"/>

        <!-- Duplicate variable inspection -->
        <localInspection
            language="TCSS"
            displayName="Duplicate variable declaration"
            groupName="TCSS"
            enabledByDefault="true"
            level="WARNING"
            implementationClass="org.msaraiva.pytcss.inspection.TcssDuplicateVariableInspection"/>
    </extensions>

    <actions>
        <!-- Add actions here if needed -->
    </actions>
</idea-plugin>
