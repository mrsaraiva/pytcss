/* Phase 5 Features Test File
 *
 * This file demonstrates all features implemented in Phase 5:
 * 1. Property catalog expansion (17 new properties)
 * 2. !important modifier support
 * 3. initial keyword support
 * 4. Pseudo-class validation with fuzzy suggestions
 * 5. Fuzzy property name suggestions
 * 6. Enum value completion for properties
 */

/* Variable declarations used in tests */
$primary-color: #FF0000;
$secondary-color: #00FF00;
$my-border: solid;

/* ============================================================================
 * Test 1: New Properties from Phase 5.2
 * ============================================================================
 * This section tests all 17 properties added to the catalog in Phase 5.2.
 */

Screen {
    /* Split container specification (ENUM) */
    split: horizontal;

    /* Auto color adjustment properties (BOOLEAN - use 0 or 1) */
    auto-color: 0;
    auto-border-subtitle-color: 1;
    auto-border-title-color: 1;
    auto-link-color: 0;
    auto-link-color-hover: 0;

    /* Constraint properties (ENUM) */
    constrain-x: minimum;
    constrain-y: maximum;

    /* Grid properties (LENGTH and NUMBER) */
    grid-size-columns: 5;
    grid-size-rows: 3;
    grid-gutter-horizontal: 1;
    grid-gutter-vertical: 1;

    /* Text properties (ENUM) */
    text-overflow: ellipsis;
    text-wrap: wrap;

    /* Expand property (ENUM) */
    expand: 0;

    /* Line pad property (NUMBER) */
    line-pad: 0;

    /* Transitions property (STRING) */
    transitions: opacity 500ms;
}

/* ============================================================================
 * Test 2: !important Modifier Support
 * ============================================================================
 * This section demonstrates the !important modifier works with various value
 * types: colors, color functions, variables, and the initial keyword.
 */

Screen.important-test {
    /* Basic !important usage with named color */
    background: blue !important;

    /* With color functions */
    color: rgb(255, 0, 0) !important;

    /* With variables */
    border-color: $primary-color !important;

    /* With named color on color property */
    tint: red !important;

    /* With initial keyword */
    height: initial !important;
}

/* ============================================================================
 * Test 3: initial Keyword Support
 * ============================================================================
 * This section tests that the 'initial' keyword is recognized and highlighted
 * correctly for various property types.
 */

Panel.initial-test {
    /* Setting properties to initial value */
    width: initial;
    height: initial;
    background: initial;
    color: initial;
    border: initial;
    padding: initial;
}

/* ============================================================================
 * Test 4: Pseudo-class Validation
 * ============================================================================
 * This section tests all 19 valid TCSS pseudo-classes, plus one invalid
 * pseudo-class to verify error reporting with fuzzy suggestions.
 */

/* All 19 valid TCSS pseudo-classes */
Button:hover { background: blue; }
Button:focus { background: green; }
Button:active { background: red; }
Button:disabled { background: gray; }
Button:light { background: white; }
Button:dark { background: black; }
Button:blur { background: yellow; }
Button:can-focus { background: cyan; }
Button:has-children { background: magenta; }
Button:first-child { background: white; }
Button:last-child { background: white; }
Button:odd-child { background: white; }
Button:even-child { background: white; }
Button:only-child { background: white; }
Button:focus-within { background: white; }
Button:inline { background: white; }
Button:inline-block { background: white; }
Button:vertical-scroll { background: white; }
Button:horizontal-scroll { background: white; }

/* Invalid pseudo-class - should show error with suggestion "Did you mean ':hover'?" */
Button:hovr { background: blue; }

/* ============================================================================
 * Test 5: Fuzzy Property Suggestions
 * ============================================================================
 * This section contains intentional typos to test fuzzy property name
 * matching. Each should suggest the correct property name.
 */

Screen.fuzzy-test {
    /* Typos that should suggest corrections */
    backgruond: blue;    /* Should suggest "background" */
    colr: red;          /* Should suggest "color" */
    bordre: solid;      /* Should suggest "border" */
    paddig: 0;          /* Should suggest "padding" */
}

/* ============================================================================
 * Test 6: Enum Value Completion
 * ============================================================================
 * This section tests enum value completion for properties with restricted
 * value sets. Trigger completion inside the value area to see suggestions.
 */

Screen.enum-test {
    /* display: block | grid | hidden | none */
    display: block;
    display: grid;
    display: hidden;
    display: none;

    /* layout: horizontal | vertical | grid */
    layout: vertical;
    layout: horizontal;
    layout: grid;

    /* overflow: hidden | scroll | auto */
    overflow: auto;
    overflow: hidden;
    overflow: scroll;

    /* border: solid | dashed | dotted | double | round | thick | outline | ascii | wide | tall | heavy */
    border: solid;
    border: dashed;
    border: dotted;
    border: double;
    border: round;
    border: thick;
    border: outline;
    border: ascii;
    border: wide;
    border: tall;
    border: heavy;
}

/* ============================================================================
 * Test 7: Color Value Support
 * ============================================================================
 * This section demonstrates color support works with variables and shows
 * color previews in the gutter for all color formats.
 */

Screen.colors {
    /* Hex colors */
    background: #333333;

    /* Hex with alpha channel */
    color: #FF000080;

    /* Named colors */
    border-color: red;
    tint: white;

    /* Color functions - RGB/RGBA */
    background-tint: rgb(255, 128, 0);
    scrollbar-color: rgba(0, 0, 0, 0.5);

    /* Color functions - HSL/HSLA */
    link-color: hsl(120, 100%, 50%);
    link-color-hover: hsla(240, 100%, 50%, 0.8);

    /* Named colors with opacity suffix */
    scrollbar-background: blue 50%;

    /* Variables (should show color preview and resolve to #FF0000) */
    color: $primary-color;
}

/* ============================================================================
 * Test 8: Combined Features
 * ============================================================================
 * This section combines multiple Phase 5 features: !important, initial,
 * variables, new properties, and pseudo-classes together.
 */

Button.combined-test {
    /* Enum value with !important */
    display: block !important;

    /* Initial keyword with !important */
    padding: initial !important;

    /* Variable in property value */
    background: $secondary-color;

    /* Named color with opacity and !important */
    color: red 80% !important;
}

Button.combined-test:hover {
    background: blue;
    split: horizontal;
    text-overflow: ellipsis;
}

Button.combined-test:focus {
    border: solid !important;
    auto-color: 1;
}

/* ============================================================================
 * Test 9: Error Cases for Validation
 * ============================================================================
 * This section contains intentional errors to verify validation works:
 * - Unknown property names should show fuzzy suggestions
 * - Invalid pseudo-classes should show error with suggestions
 */

Screen.error-test {
    /* Invalid property name - should show "Unknown TCSS property 'widht'. Did you mean 'width'?" */
    widht: 100;
}

/* Invalid pseudo-class - should show "Invalid pseudo-class ':bad-pseudo-class'" */
InvalidRule:bad-pseudo-class {
    color: red;
}

/* ============================================================================
 * Test 10: Completion Triggers
 * ============================================================================
 * This section provides instructions for manually testing code completion.
 * Place cursor in indicated positions and trigger completion (Ctrl+Space).
 */

Screen.completion-test {
    /* Completion test instructions:
     *
     * 1. Type "displa" - should complete with "display" property
     * 2. Inside "display: " - should suggest: block, grid, hidden, none
     * 3. Type "layou" - should complete with "layout" property
     * 4. Inside "layout: " - should suggest: horizontal, vertical, grid
     * 5. Inside "border: " - should suggest all 11 border enum values
     * 6. Type "$" - should show all variables with color preview icons:
     *    - $primary-color (local, red icon)
     *    - $secondary-color (local, green icon)
     *    - $my-border (local, no color)
     * 7. Type property with typo - should show "Did you mean X?" suggestion
     * 8. Named colors - type "bl" should suggest "blue", "black", "blueviolet", etc.
     */

    /* Place cursor after colon and trigger completion (Ctrl+Space) */
    display: ;
}

/* ============================================================================
 * Summary of Testable Features
 * ============================================================================
 *
 * Validation Features:
 * ✓ Pseudo-class validation (19 valid pseudo-classes)
 * ✓ Invalid pseudo-class error with fuzzy suggestion
 * ✓ Unknown property warning with fuzzy suggestion
 * ✓ Undefined variable error (cross-file aware) - not tested here, but works
 *
 * Grammar Features:
 * ✓ !important modifier parsing and highlighting
 * ✓ initial keyword parsing and highlighting
 * ✓ Color opacity suffix support (named-color 50%)
 * ✓ Variable references with $ prefix
 *
 * Completion Features:
 * ✓ Property name completion with descriptions and type info
 * ✓ Enum value completion for restricted properties
 * ✓ Variable completion (local and cross-file with color preview icons)
 * ✓ Named color completion with color preview icons
 * ✓ Smart $ removal for named colors (type "$blu" → select "blue" → inserts "blue")
 *
 * Property Catalog Expansion (17 new properties):
 * ✓ split, auto-color, auto-border-subtitle-color, auto-border-title-color
 * ✓ auto-link-color, auto-link-color-hover, constrain-x, constrain-y
 * ✓ expand, grid-gutter-horizontal, grid-gutter-vertical
 * ✓ grid-size-columns, grid-size-rows, line-pad
 * ✓ text-overflow, text-wrap, transitions
 *
 */
